# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

image: ruby:latest

stages:          # List of stages for jobs, and their order of execution
  - build
  - test

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - make -C server > /dev/null

unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  dependencies:
    - build-job
  script:
    - ruby -v
    - bundle -v
    - bundle install --binstubs
    - ./server/server -x 10 -y 10 -n TOTO  -p 8080 -c 6 -v -t 10000 -G 0 -H -s >/dev/null & 
    - bin/rspec -r rspec_junit_formatter --format RspecJunitFormatter -o tests.xml
    - pkill server
  artifacts:
    when: always
    paths:
      - tests.xml
    reports:
      junit: tests.xml
    untracked: false
    expire_in: 30 days

